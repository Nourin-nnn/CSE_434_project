@model CSE_434_project.Models.Student

    @{
        ViewBag.Title = "Create";
    }

    <div class="container">
        @using (Html.BeginForm("Create", "Students", FormMethod.Post,
            new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 style="margin-left:450px"> Student Information </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.ConfirmMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmMobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmMobile, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Gender", new List<SelectListItem> {
                   new SelectListItem{Text="Male",Value="Male"},
                   new SelectListItem{Text="Female",Value="Female"}}, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>





            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Shift, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Shift", new List<SelectListItem> {
                   new SelectListItem{Text="Morning",Value="Morning"},
                   new SelectListItem{Text="Day",Value="Day"}}, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.ParentID, "ParentID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ParentID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="file" id="image1" name="UploadImage" required class="form-control imageChange" />

                </div>
            </div>
            <div style="margin-left:300px">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            </div> *@
            <div class="form-group" style="margin-left:300px">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="image1" name="UploadImage" required class="form-control imageChange" />
                    @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })

                </div>
            </div>

            <script>
                // Client-side validation for image extension
                document.getElementById('image1').addEventListener('change', function () {
                    var validExtensions = ['.png', '.jpg', '.jpeg'];
                    var fileInput = this;

                    if (fileInput.files.length > 0) {
                        var fileName = fileInput.files[0].name;
                        var fileExtension = '.' + fileName.split('.').pop();

                        if (validExtensions.indexOf(fileExtension.toLowerCase()) === -1) {
                            alert('Invalid file extension. Please choose a PNG or JPG image.');
                            fileInput.value = ''; // Clear the file input
                        }
                    }
                });
            </script>

            <div>

            </div>
            <div class="form-group" style="margin-left:300px">
                <span class="col-md-offset-3 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary bt-lg" />
                </span>
                <span class="col-md-offset-3 col-md-10">

                    <button class="btn btn-outline-primary text-bg-dark">

                        @Html.ActionLink("Back to List", "Index")

                    </button>

                </span>

            </div>

        </div>

        }
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }




@*@model CSE_434_project.Models.Student

    @{
        ViewBag.Title = "Create";
    }

    <div class="container" style="margin-left:250px">
        @using (Html.BeginForm("Create", "Students", FormMethod.Post,
            new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="margin-left:250px"> Student Information </h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmMobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmMobile, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Gender", new List<SelectListItem> {
                       new SelectListItem{Text="Male",Value="Male"},
                       new SelectListItem{Text="Female",Value="Female"}}, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Shift, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Shift", new List<SelectListItem> {
                       new SelectListItem{Text="Morning",Value="Morning"},
                       new SelectListItem{Text="Day",Value="Day"}}, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentID, "ParentID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ParentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            <input type="file" id="image1" name="UploadImage" required class="form-control imageChange" />

                        </div>
                    </div>*@
@* <div class="form-group">
                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        <input type="file" id="image1" name="UploadImage" required class="form-control imageChange" />

                    </div>
                </div>
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })


                <div class="form-group">
                    <span class="col-md-offset-3 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary bt-lg" />
                    </span>
                    <span class="col-md-offset-3 col-md-10">

                        <button class="btn btn-outline-primary text-bg-dark">

                            @Html.ActionLink("Back to List", "Index")

                        </button>

                    </span>

                </div>
            </div>

        }
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
